// ? atamada bÃ¼yÃ¼k kÃ¼cÃ¼k harf Ã¶nemli
// let deneme = 5;
// let Deneme = 6;
// const myVar1 = 7;

// ?ciktiyi console da degilde html live server de gÃ¶rmek istiyorsak
// console.log(deneme);
// document.getElementById("aritmetik").innerHTML = "deneme = " + deneme;

// ?Ã¶nceki yazilanlar silinmesin altina devam etsin istiyorsak += kullanmaliyiz
// document.getElementById("aritmetik").innerHTML +=
//   "<br/>" +
//   "Deneme = " +
//   Deneme +
//   "<br/>" +
//   "veli" +
//   "<br>" +
//   "Deneme =" +
//   Deneme +
//   "<br/>" +
//   "myVar = " +
//   myVar1;

//! Aritmetik OperatÃ¶rler
// ? toplama operatÃ¶rÃ¼(+)
// const num1 = 10;
// const num2 = 69;

// const toplam = num1 + num2;
// num1 ve num2 operand , + operator olark adlandÄ±rÄ±lÄ±yor.

// document.getElementById("aritmetik").innerHTML += "toplam =" + toplam;

// const msg1 = "Hello ";
// const msg2 = "World!";

// const mesaj = msg1 + msg2;
// document.getElementById("aritmetik").innerHTML = mesaj;

// const firstName = "Koray";
// const lastName = "Koksal";
// const fullName = firstName + " " + lastName;
// console.log(firstName, lastName);
// console.log(firstName + " " + lastName);
// document.getElementById("aritmetik").innerHTML = fullName;
// document.getElementById("aritmetik").innerHTML = firstName + " " + lastName;

// *Ã¶rnekler
// let x = 1 + 1;//2
// let x = "1" + 1;//11
// let x = 1 + 1 + "1"; //21
// let x = 1 + 1 + "1" + 1 + 2; //2112
// let x = 1 + "a";//1a
// let x = "a" + "b";//ab
// document.getElementById("aritmetik").innerHTML = x + " " + typeof x;

// ? cikarma operatÃ¶rÃ¼(-)
// const x = 55;
// const y = 44;
// console.log(x - y);

// const x = 10;
// const y = "1";

// const a = "b";
// const z = x - y;
// const v = y - a;
// document.getElementById("aritmetik").innerHTML = typeof z;
// document.getElementById("aritmetik").innerHTML += v;

// *Ã¶rnekler
// let x = 10 - 5;
// let x = 10 - "5";
// let x = "10" - 5;
// let x = "10" - "5";
// let x = 10 - "a";
// let x = "a" - "b";

// document.getElementById("aritmetik").innerHTML += x + " " + typeof x;

// ? *carpma operatÃ¶rÃ¼(*)
// *Ã¶rnekler
// *1
// let carp1 = 7;
// let carp2 = 9;
// let carpma = carp1 * carp2;
// document.getElementById("aritmetik").innerHTML = carpma + " " + typeof carpma;

// *2
// let x = "a" * "b";
// let y = "a" * 3;

// document.getElementById("aritmetik").innerHTML +=
//   x + " " + typeof x + "<br/>" + y + " " + typeof y;

//? bÃ¶lme (/) operatÃ¶rÃ¼
// *Ã¶rnekler
// *1
// const bÃ¶l1 = 81;
// const bÃ¶l2 = 9;

// document.getElementById("aritmetik").innerHTML = bÃ¶l1 / bÃ¶l2;

// *2
// const x = bÃ¶l1 / "9";
// document.getElementById("aritmetik").innerHTML = x + typeof x;
// *3
// document.getElementById("aritmetik").innerHTML = bÃ¶l1 / "dokuz";
// *4
// document.getElementById("aritmetik").innerHTML = bÃ¶l2 / 0;
// *5
// document.getElementById("aritmetik").innerHTML = -61 / 0;
// *6
// document.getElementById("aritmetik").innerHTML = 0 / 5; //0
// *7
// document.getElementById("aritmetik").innerHTML = 0 / -5; // -0
// document.getElementById("aritmetik").innerHTML = 0 / 0;
// console.log(0 / 0);
// *8
// document.getElementById("aritmetik").innerHTML = 57 / 9;

//? Mod Alma(%) operatÃ¶rÃ¼ (BÃ¶lmedeki kalan sayÄ±yÄ± bulur)
// *Ã¶rnekler
// *1
// const mod1 = 57;
// const mod2 = 9;
// document.getElementById("aritmetik").innerHTML = mod1 % mod2;
// *2
// document.getElementById("aritmetik").innerHTML = 22 % 7;

// *basamaktaki sayilari bulma Ã¶rnekleri
const benimSayim = 967;
// document.getElementById("aritmetik").innerHTML = benimSayim % 10;

// document.getElementById("aritmetik").innerHTML = Math.floor(
//   (benimSayim % 100) / 10
// );
// ((benimSayim % 100) - (benimSayim % 10)) / 10;
// Math.floor((benimSayim / 10) % 10);

// const yÃ¼zlerBas = Math.floor(benimSayim / 100);
// document.getElementById("aritmetik").innerHTML = yÃ¼zlerBas;
// *Ã¼s(**)

// document.getElementById("aritmetik").innerHTML = 2 ** 3;
// document.getElementById("aritmetik").innerHTML = 2 ** 2;
// document.getElementById("aritmetik").innerHTML = 4 ** 0.5;

// //?Bazi hazÄ±r fonksiyonlar
// *Math.ceil();  //* her zaman en yakin ust tam sayiya yuvarlar

// document.getElementById("aritmetik").innerHTML = Math.ceil(967 / 4);

//* Math.floor();  //* her zaman en yakin alt tam sayiya yuvarlar
// document.getElementById("aritmetik").innerHTML = Math.floor(967 / 4);

//* Math.trunc(); //* sayinin tam kismini alir.
// document.getElementById("aritmetik").innerHTML = Math.trunc(967 / 4);

//* Math.round(); //* en yakin tam sayiya yuvarlar.

// document.getElementById("aritmetik").innerHTML = Math.round(967 / 4);
// document.getElementById("aritmetik").innerHTML = Math.round(23.5);
//* Math.random(); //* 0 ve 1 arasÄ±nda rasgele sayi uretir.

// !default olarak 0-1 arasinda rasgele bir sayi Ã¼retir
// document.getElementById("aritmetik").innerHTML += "<br/>" + Math.random();

//  0-10 arasinda rasgele bir sayi Ã¼retir
// document.getElementById("aritmetik").innerHTML += "<br/>" + Math.random() * 10;
//!  0-100 arasinda rasgele bir sayi Ã¼retir
// document.getElementById("aritmetik").innerHTML += "<br/>" + Math.random() * 100;
//!  1-2 arasinda rasgele bir sayi Ã¼retir
// document.getElementById("aritmetik").innerHTML += "<br/>" + (Math.random() + 1);
//!  2-12 arasinda rasgele bir sayi Ã¼retir
// document.getElementById("aritmetik").innerHTML +=
//     "<br/>" + (Math.random() * 10 + 2);

// !toFixed(basamakSayÄ±sÄ±):
// . dan sonra parantezin iÃ§ine verdiÄŸimiz sayÄ± kadar basamak alÄ±r. EÄŸer noktadan sonraki basamak sayÄ±sÄ± iÃ§ine verdiÄŸimiz sayÄ±dan bÃ¼yÃ¼kse sondaki rakamÄ± bir artÄ±rÄ±r.

// document.getElementById("aritmetik").innerHTML +=
//   "<br/>" + Math.random().toFixed(1);

//*Ã¶rnekler

// const pi = 3.14;
// const yariCap = 9;
// const alan = pi * yariCap ** 2;
// document.getElementById("artirma-azaltma").innerHTML = 4 ** 0.5;
// console.log("alan = " + alan);
// console.log(`alan = ${Math.trunc(alan)}`); //* sayinin tam kismini alir.
// console.log(`alan = ${Math.floor(alan)}`); //* her zaman en yakin alt tam sayiya yuvarlar
// console.log(`alan = ${Math.ceil(alan)}`); //* her zaman en yakin ust tam sayiya yuvarlar
// console.log(`alan = ${Math.round(alan)}`); //* en yakin tam sayiya yuvarlar

// const hazirSayi = 56.788888;
// console.log(hazirSayi.toFixed(3));
// console.log(`hazirSayi of Circle: ${hazirSayi.toFixed(3)} `);
// *. dan sonra parantezin iÃ§ine verdiÄŸimiz sayÄ± kadar basamak alÄ±r. EÄŸer noktadan sonraki basamak sayÄ±sÄ± iÃ§ine verdiÄŸimiz sayÄ±dan bÃ¼yÃ¼kse sondaki rakamÄ± bir artÄ±rÄ±r.
// let sayi = Math.random();
// console.log(sayi);
// console.log(Math.round(sayi * 10));
// console.log(Math.round(sayi * 100));
// console.log(Math.round(Math.random() * 50));
// console.log(Math.round(Math.random() * 2));
// console.log(Math.round(Math.random() + 1));
// console.log(Math.random() - 1);
// console.log(Math.round(Math.random() - 1));
// console.log(Math.round(-0.6));
// console.log(Math.round(-0.5));
// console.log(Math.round(-0.4));

//? ++ ve -- operatÃ¶rleri 1 artÄ±rÄ±r veya 1 eksiltir

// sonrasÄ± artÄ±rma ve eksiltme

// let number1 = 6;
// let artirNew = number1 // 6

// number1 = number1 + 1// 7
// let number = 5;
// let number1 = number++;
// console.log(number1);
// console.log(number);

// let number1 = ++number;
// console.log(number1);
// console.log(number);
// let number1New = number1++; // Ã¶nce atadÄ± sonrasÄ±nda number1 deÄŸiÅŸkenini bir number1dÄ±
// console.log(number1New); // 6
// console.log(number1); // 7
// console.log(number1New); // 6

// let newSayi = ++number; // Ã¶nce artÄ±r sonra ata
// console.log(newSayi); //
// console.log(--newSayi); //
// console.log(newSayi--); //
// console.log(newSayi); //

// let randomNumber = Math.random() - 1;
// console.log(randomNumber);
// console.log(Math.round(randomNumber));

// //! ğŸ”¥ğŸ”¥ğŸ”¥              Atama OperatÃ¶rleri

// let nums1 = 14;
// let nums2 = 17;
// //! += Ekle ve Sonucu Ata
// nums2 = nums2 + nums1;
// //? yukarÄ±daki gibi uzun uzun yazmak yerine += operatÃ¶rÃ¼nÃ¼ kullanarak iÅŸlemimi kÄ±saltmÄ±ÅŸ oldum. AynÄ± ÅŸekilde diÄŸer operatÃ¶rler iÃ§inde geÃ§erli.
// nums2 += nums1;
// console.log(nums2);

let num14 = 6;
let num15 = 3;

// //! -= Ã‡Ä±kar ve Sonucu Ata
// num14 = num14 - num15;
// num14 -= num15;
// console.log(num14); // 3

// //! *= Ã‡arp ve Sonucu Ata
// num14 = num14 * num15;
// num14 *= num15;
// console.log(num14); //18
// //! /= BÃ¶l ve Sonucu Ata
// num14 = num14 / num15;
// num14 /= num15;
// console.log(num14);
// //! /= BÃ¶lÃ¼mden KalanÄ± Bul ve Ata
// num14 = num14 % num15;
// num14 %= num15;
// console.log(num14);

// //! **= Ãœs Al ve Sonucu Ata
// num14 = num14 ** num15;
// num14 **= num15;
// console.log(num14);

//! ğŸ”¥ğŸ”¥ğŸ”¥              KarÅŸÄ±laÅŸtÄ±rma OperatÃ¶rleri

// const num16 = 27;

// console.log(num16 == 27); //true
// console.log(27 == "27"); // true
// //? == (eÅŸitlik operatÃ¶rÃ¼), iki deÄŸeri karÅŸÄ±laÅŸtÄ±rÄ±rken tip dÃ¶nÃ¼ÅŸÃ¼mÃ¼ yapar. EÄŸer karÅŸÄ±laÅŸtÄ±rÄ±lan deÄŸerler farklÄ± tiplerde ise, JavaScript otomatik olarak bu deÄŸerleri aynÄ± tipe dÃ¶nÃ¼ÅŸtÃ¼rerek karÅŸÄ±laÅŸtÄ±rma yapar. Bu iÅŸlem sÄ±rasÄ±nda, deÄŸerler eÅŸitlenebilir bir forma getirilir ve ardÄ±ndan karÅŸÄ±laÅŸtÄ±rÄ±lÄ±r.

// console.log(num16 === 27); // true
// console.log(27 === "27"); // false
//? === operatÃ¶rÃ¼ otomatik tip dÃ¶nÃ¼ÅŸÃ¼mÃ¼ yapmadÄ±ÄŸÄ±ndan dolayÄ±, farklÄ± tiplerdeki deÄŸerleri eÅŸit olarak kabul etmez.tip ve deÄŸer aynÄ± mÄ± diye sorgular.

// const user1 = prompt("LÃ¼tfen bir sayÄ± griniz: ");
// const user2 = prompt("LÃ¼tfen bir sayÄ± griniz: ");
// console.log(user1);
// console.log(user2);
// const isSame = user1 == user2;
// console.log(isSame);
// console.log("'10'" == "10"); //false

// console.log(true == 1); //true
// console.log(false == 0); //true
// console.log(null == undefined); // true
// true boolean deÄŸeri 1 sayÄ±sÄ± ile eÅŸit kabul edilir, null ve undefined ise birbirine eÅŸit kabul edilir.
// console.log(true === 1); // false
// console.log(null === undefined); // false
// console.log(typeof null, typeof undefined); // false

// //? !=, !==

// console.log(15 != "15"); // false. Ã§Ã¼nkÃ¼ deÄŸerleri eÅŸit
// console.log(15 !== "15"); // true. Ã§Ã¼nkÃ¼ typelarÄ± eÅŸit deÄŸil

// //? >, < (BÃ¼yÃ¼k mÃ¼?, KÃ¼Ã§Ã¼k mÃ¼?)
// console.log(15 > 5); // true
// console.log(15 < 5); // false

// console.log("15" > 5); // true

// console.log("a" > "b"); // false.String ifadelerde ASCII'ye gore kiyaslama yapilir.
// console.log("a".charCodeAt()); // 97
// console.log("b".charCodeAt()); // 98
//. .charCodeAt() metodu string karakterin ASCII karÅŸÄ±lÄ±ÄŸÄ±nÄ± verir.
// console.log("a" > "A");// true
// console.log("a" > "Z"); // true
// console.log("Z" > "a"); //false

// //? >=, <= (BÃ¼yÃ¼k veya eÅŸit mi?, KÃ¼Ã§Ã¼k veya eÅŸit mi?)

// console.log(15 >= 15); //true
// console.log(15 <= 15); // true
// console.log(15 >= 16); // false
// console.log(15 >== "15");// error verir. Ã‡Ã¼nkÃ¼ bu ÅŸekilde karÅŸÄ±laÅŸtÄ±rma operatÃ¶rÃ¼ bulunmuyor.
// console.log(15 >= "15"); // true
// console.log("14" <= "15"); // true

//! ğŸ”¥ğŸ”¥ğŸ”¥              MantÄ±ksal OperatÃ¶rler

//! && and
// console.log(true && true); // true
// console.log("" && true); // ''
// console.log(" " && true && 2 && 6 && "ali" && "veli" && true); // true

// console.log(5 && "Merhaba"); // "Merhaba"
// console.log(0 && "DÃ¼nya"); // 0
// // && operatoru ilk gÃ¶rdÃ¼ÄŸÃ¼ falsy veya false deÄŸerini dÃ¶ner.
// console.log(5 && 0); // 0
// console.log(true && false); // false

//! || or
// console.log(true || false); //true
// console.log(5 || 15); // 5
// console.log(5 || 0); // 5
// console.log("" || "Merhaba"); // "Merhaba"
// console.log("" || 0); // 0
// // || operatoru true ve truthy deÄŸer arar. ilk gÃ¶rdÃ¼ÄŸÃ¼ true veya truthy dÃ¶ner.Bulamazsa son gÃ¶rdÃ¼ÄŸÃ¼ false veya falsy deÄŸeri dÃ¶ner.

// ! not
// console.log(!true); // false
// console.log(!false); // true
// console.log(!0); // true
// console.log(!5); // false

// falsy
// console.log(Boolean(false)); // false
// console.log(Boolean(0)); // false
// console.log(Boolean(-0)); // false
// console.log(Boolean(0n)); // false
// console.log(Boolean("")); // false (boÅŸ string)
// console.log(Boolean(null)); // false
// console.log(Boolean(undefined)); // false
// console.log(Boolean(NaN)); // false

// truthy
// console.log(Boolean(true)); // true
// console.log(Boolean({})); // true (boÅŸ object)
// console.log(Boolean([])); // true (boÅŸ array)
// console.log(Boolean(5)); // true
// console.log(Boolean("0")); // true (dolu string)
// console.log(Boolean("false")); // true (dolu string)
// console.log(Boolean(Infinity)); // true
// console.log(Boolean(new Date())); // true (tarih methodlarÄ±)
// console.log(Boolean(function () {})); // true (boÅŸ fonksiyon)
// console.log(
//   Boolean(function () {
//     console.log("Hello World!");
//   })
// ); // true (boÅŸ fonksiyon)

//! Ä°ÅŸlem Ã–nceliÄŸi sÄ±ralamasÄ±
// 1. ! (not)
// 2. && (and)
// 3. || (or)
// const karÅŸilaÅŸtÄ±rma = ("merhaba" && "dÃ¼nya") || false || (28 && 67 && !0);
// console.log(karÅŸilaÅŸtÄ±rma); // dÃ¼nya

//?mantik operatÃ¶rleri il ilgili soru:
// let vize = Number(prompt("LÃ¼tfen vize notunuzu giriniz ?"));
// let final = Number(prompt("LÃ¼tfen final notunuzu giriniz ?"));
// let canEgrisi = 65;
// const sonuÃ§ = ?
// kullanÄ±cÄ±dan vize ve final notunu prompt olarak alÄ±n. sabit bir canEgrisi(ortalama) belirleyiniz.
//! KullanÄ±cÄ±nÄ±n vize ve final ortalamasÄ± canEgrisine eÅŸit veya bÃ¼yÃ¼kse KullanÄ±cÄ±ya "GeÃ§tiniz" mesajÄ± dÃ¶nÃ¼nÃ¼z. EÅŸit veya bÃ¼yÃ¼k deÄŸilse "KaldÄ±nÄ±z" ÅŸeklinde mesaj dÃ¶nÃ¼nÃ¼nÃ¼z.
//! Not: prompt tan gelen veriler string olarak geliyor o nedenle dÃ¶nÃ¼ÅŸtÃ¼rme iÅŸlemi yapÄ±yoruz.

// ?cevap :
// let vize = Number(prompt('vize notunuz: '));
// let final = +prompt('final notunuz: ');
// let can = 65;
// let ort =  (vize * .3 + final * .7);
// console.log(((ort == can || ort > can) && "GeÃ§tiniz") || "KaldÄ±nÄ±z");

// * =============================================
// *            TIP DONUSUMLERI
// * =============================================

// let sayi = +prompt("Bir sayi girinz:") //? 100
// console.log(typeof sayi)
// let sayi2 = 10
// sayi = sayi + sayi2 //? concatination

// console.log(++sayi)

// console.log(Number("123")) //? 123
// console.log(Number("12.3")) //? 12.3
// console.log(Number("0")) //? 0
// console.log(Number(" ")) //? 0
// console.log(Number("")) //? 0
// console.log(Number(null)) //? 0
// console.log(Number(undefined)) //? NaN

// const myNumber = "threezeroone" //? string
// let myNumber2 = Number(myNumber)
// console.log(myNumber2) //? NaN
// console.log(typeof myNumber2) //? number

// const dolar = "1000.3"
// const tl = "2000.2"

// const totalMoney = Number(dolar) + +tl
// console.log(totalMoney)

//* ALternatif olarak parseInt() ve parseFloat() da kullanilabilir.
// const dolarInt = parseInt(dolar) //? tamsayiya cevirir
// console.log(dolarInt)
// const tlFloat = parseFloat(tl) //? virgÃ¼llÃ¼ sayiya Ã§evirir
// console.log(tlFloat)

// console.log(parseFloat(null)) //? NaN
// console.log(parseFloat("")) //? NaN
// console.log(parseFloat(undefined)) //? NaN

//? String
// const myNumber3 = 2000.5
// console.log(String(myNumber3))

// *Meraklisina

// true + false
// 12 / "6"
// "number" + 15 + 3
// 15 + 3 + "number"
// [1] > null
// "foo" + + "bar"
// 'true' == true
// false == 'false'
// null == ''
// !!"false" == !!"true"
// [â€˜xâ€™] == â€˜xâ€™
// [] + null + 1
// [1,2,3] == [1,2,3]
// {}+[]+{}+[1]
// !+[]+[]+![]
// new Date(0) - 0
// new Date(0) + 0

// *cevaplar
//? nedenlerini anlamak icin bu linkteki yaziya gÃ¶z atabilirsiniz  https://medium.com/@kplnhsyn.49/list/reading-list
// true + false             // 1
// 12 / "6"                 // 2
// "number" + 15 + 3        // 'number153'
// 15 + 3 + "number"        // '18number'
// [1] > null               // true
// "foo" + + "bar"          // 'fooNaN'
// 'true' == true           // false
// false == 'false'         // false
// null == ''               // false
// !!"false" == !!"true"    // true
// ['x'] == 'x'             // true
// [] + null + 1            // 'null1'
// [1,2,3] == [1,2,3]       // false
// {}+[]+{}+[1]             // '0[object Object]1'
// !+[]+[]+![]              // 'truefalse'
// new Date(0) - 0          // 0
// new Date(0) + 0          // 'Thu Jan 01 1970 02:00:00(EET)0'
